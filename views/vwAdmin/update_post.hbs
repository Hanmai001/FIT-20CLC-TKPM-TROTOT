{{#section "css"}}
    <link
        rel="stylesheet"
        type="text/css"
        href="../../public/assets/css/admin/admin_profile.css"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
    <link rel="stylesheet" href="../../public/assets/css/landlord/post-house.css" />
{{/section}}
{{#section "js"}}
<script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>
<script>

    let imagesArray = [];
    let photos = '{{photos}}';
    let videos = '{{videos}}';
    photos = JSON.parse(photos.replace(/&quot;/g, '"'));
    videos = JSON.parse(videos.replace(/&quot;/g, '"'));

    const form = document.getElementById('form');
    const fileUploader = document.getElementById('house-file');
    const reader = new FileReader();
    const outputFiles = document.querySelector('.content__files')
    const imageGrid = document.getElementById('profile-ava');
    const citySelect = document.getElementById('city-select');
    const typeSelect = document.getElementById('type-select');
    const statusSelect = document.getElementById('status-select');
    const districtSelect = document.getElementById('district-select');
    const wardSelect = document.getElementById('ward-select');
    const detailAddress = document.getElementById('detailed-address');
    const title = document.getElementById('title');
    const description = document.getElementById('description');
    const price = document.getElementById('price');
    const num_people = document.getElementById('num_people');
    const area = document.getElementById('area');
    const utilitySelect = document.getElementById('utility-select');
    const water = document.getElementById('water');
    const electricity = document.getElementById('electricity');

    $(document).ready(function () {
        const dt = new DataTransfer();
        Promise.all([
            Promise.all(photos.map(async function (item) {
                const url = item.ChiTietHinhAnh;
                const file = await getFileFromUrl(url, url.substring(url.lastIndexOf('/') + 1));
                file.HinhAnhID = item.HinhAnhID;
                imagesArray.push(file);
                dt.items.add(file);
            })),
            Promise.all(videos.map(async function (item) {
                const url = item.ChiTietVideo;
                const file = await getFileFromUrl(url, url.substring(url.lastIndexOf('/') + 1));
                file.VideoID = item.VideoID;
                imagesArray.push(file);
                dt.items.add(file);
            }))
        ]).then(() => {
            fileUploader.files = dt.files;
            displayImages();
        });

        let utilitySelect = new Choices('#utility-select', {
            removeItemButton: true,
            maxItemCount: 20,
            searchResultLimit: 5,
            renderSelectedChoices: true, // enable rendering of selected choices
        });
        $.ajax({
            url: "http://localhost:3000/api/utilities",
            type: "get",
            dateType: "json",

            success: function (result) {
                const utilities = "{{utilities}}"

                const videos = "{{videos}}";
                //console.log(utilities)
                $.each(result, function (key, value) {
                    //utilitySelect.setChoiceByValue(value);
                    utilitySelect.setChoices([{ value: value.TienIchID, label: value.Ten }], "value", "label", false);
                });
                let choices = utilitySelect._currentState.choices;
                choices.forEach(function (choice) {
                    if (utilities.includes(choice.value)) {
                        utilitySelect.setChoiceByValue(choice.value);
                    }
                });

            }
        });
        $.ajax({
            url: "https://provinces.open-api.vn/api/p",
            type: "get",
            dateType: "json",

            success: function (result) {
                $.each(result, function (key, value) {
                    const valueName = value.name;
                    const curAddress = `{{house.ThanhPho}}`;
                    let item = $(`<option key='${value.code}' value='${valueName}'>${valueName}</option>`);
                    if (valueName === curAddress) {
                        item.attr('selected', 'selected');
                        $("#city-select").append(item).trigger('change');
                    }
                    else
                        $("#city-select").append(item);

                });
            }
        });


        const typeSelected = "{{house.LoaiTro}}";
        $("#type-select option").each(function () {
            if ($(this).val() === typeSelected) {
                $(this).attr("selected", true);
                $("#type-select").trigger('change');
                return false;
            }
        });
        const statusSelected = "{{house.TrangThaiPhong}}";
        $("#status-select option").each(function () {
            if ($(this).val() === statusSelected) {
                $(this).attr("selected", true);
                $("#status-select").trigger('change');
                return false;
            }
        });
    });
    $("#city-select").change(function () {
        let selectedVal = $("#city-select option:selected").attr('key');
        $("#district-select").empty();
        let item = $("<option key='' class='text-center' value=''>--Chọn Quận/Huyện--</option>");
        $("#district-select").append(item);
        $("#ward-select").empty();
        item = $("<option key='' class='text-center' value=''>--Chọn Phường/Xã--</option>");
        $("#ward-select").append(item);
        if (selectedVal == "") {
            $('#note1').show()
        }
        else {
            $('#note1').hide()
            $.ajax({
                url: "https://provinces.open-api.vn/api/d/",
                type: "get",
                dateType: "json",
                success: function (result) {
                    $.each(result, function (key, value) {
                        if (value.province_code == selectedVal) {
                            const valueName = value.name;
                            const curAddress = "{{house.Quan}}";
                            item = $(`<option key='${value.code}' value='${valueName}'>${valueName}</option>`);
                            if (valueName === curAddress) {
                                item.attr('selected', 'selected');
                                $("#district-select").append(item).trigger('change');
                            }
                            else
                                $("#district-select").append(item);
                        }
                    });
                }
            });
        }

    })
    $("#district-select").change(function () {
        let selectedVal = $("#district-select option:selected").attr('key');
        $("#ward-select").empty();
        let item = $("<option key='' class='text-center' value=''>--Chọn Phường/Xã--</option>");
        $("#ward-select").append(item);
        if (selectedVal == "") {
            $('#note2').show()
        }
        else {
            $('#note2').hide()
            $.ajax({
                url: "https://provinces.open-api.vn/api/w/",
                type: "get",
                dateType: "json",
                success: function (result) {
                    $.each(result, function (key, value) {
                        if (value.district_code == selectedVal) {
                            const valueName = value.name;
                            const curAddress = "{{house.Phuong}}"
                            item = $(`<option key='${value.code}' value='${valueName}'>${valueName}</option>`);
                            if (valueName === curAddress) {
                                item.attr('selected', 'selected');
                                $("#ward-select").append(item).trigger('change');
                            }
                            else
                                $("#ward-select").append(item);
                        }
                    });
                }
            });
        }
    })
    $("#ward-select").change(function (e) {
        let selectedVal = $("#district-select option:selected").attr('key');
        if (selectedVal == "") {
            $('#note3').show()
        }
        else {
            $('#note3').hide()

        }
    })
    $("#status-select").change(function (e) {
        let selectedVal = $("#status-select option:selected").val();
        if (selectedVal == "") {
            $('#note6').show()
        }
        else {
            $('#note6').hide()

        }
    })
    $("#type-select").change(function (e) {
        let selectedVal = $("#type-select option:selected").val();
        if (selectedVal == "") {
            $('#note7').show()
        }
        else {
            $('#note7').hide()

        }
        
        
    })
    
    utilitySelect.addEventListener('change', function(event) {
        const options = utilitySelect.options;
        const unselectedOptions = [];
        for (let i = 0; i < options.length; i++) {
            if (!options[i].selected) {
                
                unselectedOptions.push(options[i].value);
            }
        }
        console.log(unselectedOptions)
    })
    function dropHandler(event) {
        event.preventDefault();

        const dt = new DataTransfer();
        if (imagesArray.length >= 10) {
            alert("Bạn chỉ có thể tải tối đa 10 files:(");
        }
        else {
            [...event.dataTransfer.files].forEach((file, i) => {
                if (imagesArray.length < 10)
                    imagesArray.push(file)
            });
            for (let i = 0; i < imagesArray.length; i++) {
                const file = imagesArray[i]
                dt.items.add(file)
            }

            fileUploader.files = dt.files;
            displayImages()

        }
    }
    function dragOverHandler(ev) {
        console.log("File(s) in drop zone");

        // Prevent default behavior (Prevent file from being opened)
        ev.preventDefault();
    }
    detailAddress.addEventListener('change', function (event) {
        const val = detailAddress.value;

        if (val == "") {
            let note = document.getElementById('detailed-address-note');
            note.style.display = 'block';
            let btn = document.getElementById('js-btn-submit');
        }
        else {
            let note = document.getElementById('detailed-address-note');
            note.style.display = 'none';
        }
    })
    description.addEventListener('change', function (event) {
        const val = description.value;

        if (val == "") {
            let note = document.getElementById('description-note');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('description-note');
            note.style.display = 'none';
        }
    })
    price.addEventListener('change', function (event) {
        const val = price.value;
        if (val == "") {
            let note = document.getElementById('price-note');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('price-note');
            note.style.display = 'none';
        }
    })
    num_people.addEventListener('change', function (event) {
        const val = num_people.value;

        if (val == "") {
            let note = document.getElementById('note5');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('note5');
            note.style.display = 'none';
        }
    })
    area.addEventListener('change', function (event) {
        const val = area.value;

        if (val == "") {
            let note = document.getElementById('area-note');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('area-note');
            note.style.display = 'none';
        }
    })
    water.addEventListener('change', function (event) {
        const val = water.value;

        if (val == "") {
            let note = document.getElementById('note8');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('note8');
            note.style.display = 'none';
        }
    })
    electricity.addEventListener('change', function (event) {
        const val = electricity.value;

        if (val == "") {
            let note = document.getElementById('note9');
            note.style.display = 'block';
        }
        else {
            let note = document.getElementById('note9');
            note.style.display = 'none';
        }
    })
    fileUploader.addEventListener('change', function (event) {
        console.log(event.target.files)
        const files = event.target.files;
        const dt = new DataTransfer();
        if (imagesArray.length >= 10) {
            alert("Bạn chỉ có thể tải tối đa 10 files:(");
        }
        else {
            for (let i = 0; i < files.length; i++) {
                if (imagesArray.length < 10)
                    imagesArray.push(files[i])
            }
            for (let i = 0; i < imagesArray.length; i++) {
                const file = imagesArray[i]
                dt.items.add(file) // here you exclude the file. thus removing it.
            }

            event.target.files = dt.files
            displayImages()
        }

    });
    function displayImages() {
        let images = "";
        console.log("display files")
        imagesArray.forEach((file, index) => {
            const fileType = file.type;
            console.log(file)
            if (fileType.startsWith('image/')) {
                images += `<div class="image">
                <img src="${URL.createObjectURL(file)}" alt="image">
                <span onclick="deleteImage(${index})">&times;</span>
              </div>`
            } else if (fileType.startsWith('video/')) {
                images += `<div class="image">
                <video controls="controls" src="${URL.createObjectURL(file)}" type="video/mp4"></video>
                <span onclick="deleteImage(${index})">&times;</span>
              </div>`
            }

        })
        outputFiles.innerHTML = images;
    }
    function deleteImage(index) {
        if (imagesArray.length < 2) {
            alert("Tin đăng phải có ít nhất một hình bạn nhé");
            return;
        }
        const temp = imagesArray[index];
        let idFile;
        if (temp.HinhAnhID) idFile = temp.HinhAnhID;
        else if (temp.VideoID) idFile = temp.VideoID;
        if (temp.HinhAnhID) {
            const input = document.createElement('input');
            input.setAttribute('type', 'hidden');
            input.setAttribute('name', 'deletedPhotos');
            input.setAttribute('value', idFile);
            form.appendChild(input);
        }
        else if (temp.VideoID) {
            const input = document.createElement('input');
            input.setAttribute('type', 'hidden');
            input.setAttribute('name', 'deletedVideos');
            input.setAttribute('value', idFile);
            form.appendChild(input);
        }
        imagesArray.splice(index, 1);
        const files = fileUploader.files;
        const dt = new DataTransfer();

        //console.log(files)
        if (imagesArray.length >= 10) {
            alert("Bạn chỉ có thể tải tối đa 10 files:(");
        }
        else {
            for (let i = 0; i < imagesArray.length; i++) {
                const file = imagesArray[i]
                
                dt.items.add(file) // here you exclude the file. thus removing it.
            }
            fileUploader.files = dt.files;
            console.log(fileUploader.files);
            displayImages()
        }
    }
    function deleteExistedFile(id, type) {
        if (type === 1) {
            if (!selectedPhotos.includes(id)) {
                selectedPhotos.push(id);
            }
        }
        else {
            if (!selectedVideos.includes(id)) {
                selectedVideos.push(id);
            }
        }
        displayImages();
    }
    async function getFileFromUrl(url, name, defaultType = 'image/jpeg') {
        const response = await fetch(url);
        const data = await response.blob();
        return new File([data], name, {
            type: data.type || defaultType,
        });
    }

</script>
{{/section}}

<div class="container-fluid" >
    <div class="row mb-5" style="min-height:650px;">
        <nav class="col-2 bg-light sidebar">
            <ul class="nav flex-column">
            <li>
                <div class="img-profile">
                <img
                    class="rounded-circle img-thumbnail img-avt"
                    {{#if (isEmpty user.avatar) }}
                    src="../../public/assets/pictures/no_avatar.png"
                    {{else}}
                    src="{{user.avatar}}"
                    {{/if}}
                    alt="avatar"
                />
                </div>
                <div>
                <p class="h6 img-name">{{user.HoTen}}</p>
                </div>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/profile">
                <i class="fa fa-cog" aria-hidden="true"></i>
                Hồ sơ cá nhân
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/users">
                <i class="fa fa-user" aria-hidden="true"></i>
                Người dùng
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/admin/posts">
                <i class="fa fa-user" aria-hidden="true"></i>
                Tin đăng trọ
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/appointments">
                <i class="fa fa-user" aria-hidden="true"></i>
                Lịch hẹn
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/reviews">
                <i class="fa fa-comments" aria-hidden="true"></i>
                Đánh giá
                </a>
            </li>
            <li class="nav-item ">
            <a class="nav-link" href="/admin/reports">
              <i class="fa fa-flag" aria-hidden="true"></i>
              Báo cáo
            </a>
          </li>
          <li class="nav-item ">
            <a class="nav-link" href="/admin/logout">
              <i class="fa fa-sign-out" aria-hidden="true"></i>
              Đăng xuất
            </a>
          </li>
            </ul>
        </nav>
        <div class="col-10 pl-5 pr-5">
            <div class="content__header mt-4 pb-3 border-bottom d-flex" style="justify-content: space-between;">
                <h5>CHI TIẾT TIN ĐĂNG TRỌ</h5>
                <a class="btn btn-danger" href="/admin/posts/{{house.TinID}}/delete">Xóa tin</a>
            </div>
            <div class="mt-4">
                <h6>THÔNG TIN CHỦ TRỌ</h6>
                <div class="row">
                    <label for="name" class="col-sm-2 col-form-label">Họ tên</label>
                    <div class="col-sm-8">
                        <p style="margin: 0; padding-top:7px">{{house.NguoiDangTin.HoTen}}</p>
                    </div>
                </div>
                <div class="row">
                    <label for="name" class="col-sm-2 col-form-label">Email</label>
                    <div class="col-sm-8">
                        <p style="margin: 0; padding-top:7px">{{house.NguoiDangTin.Email}}</p>
                    </div>
                </div>
                <div class="row">
                    <label for="name" class="col-sm-2 col-form-label">Số điện thoại</label>
                    <div class="col-sm-8">
                        <p style="margin: 0; padding-top:7px">{{house.NguoiDangTin.SDT}}</p>
                    </div>
                </div>
                <div class="row">
                    <a href="/admin/users/{{house.NguoiDangTin.NguoiDungID}}">Xem thông tin chi tiết</a>
                </div>
            <form id="form" method="post" enctype="multipart/form-data">
               <div class="mt-4">
                    <h6>TRẠNG THÁI TIN ĐĂNG</h6>
                </div>
                <div>
                    <select required name="TrangThaiKiemDuyet" id="" style="padding: 5px; width: 26%;">
                        {{#ifEqualString house.TrangThaiKiemDuyet "Chờ xác nhận"}}
                        <option value="Chờ xác nhận" selected>Chờ xác nhận</option>
                        <option value="Đã duyệt">Đã duyệt</option>
                        <option value="Bị từ chối">Bị từ chối</option>
                        {{/ifEqualString}}
                        {{#ifEqualString house.TrangThaiKiemDuyet "Đã duyệt"}}
                        <option value="Chờ xác nhận">Chờ xác nhận</option>
                        <option value="Đã duyệt" selected>Đã duyệt</option>
                        <option value="Bị từ chối">Bị từ chối</option>
                        {{/ifEqualString}}
                        {{#ifEqualString house.TrangThaiKiemDuyet "Bị từ chối"}}
                        <option value="Chờ xác nhận">Chờ xác nhận</option>
                        <option value="Đã duyệt">Đã duyệt</option>
                        <option value="Bị từ chối" selected>Bị từ chối</option>
                        {{/ifEqualString}}
                    </select>
                </div>
                <div class="mt-4 pb-2">
                    <h6>ĐỊA CHỈ CHO THUÊ</h6>
                </div>
                <div class="d-flex justify-content-between content__address">
                    <div class="address-item">
                        <div class="">
                            <label for="city-select">Tỉnh/Thành phố<span style="color:red">*</span></label>
                        </div>
                        <select required name="cities" id="city-select" onfocus='this.size=5;' onblur='this.size=1;'
                            onchange='this.size=1; this.blur();'>
                            <option class="text-center" value="">--Chọn Tỉnh/TP--</option>
                        </select>
                        <div class="text-center text-danger content__note" id="note1">
                            Vui lòng chọn Tỉnh/Thành phố
                        </div>
                    </div>
                    <div class="address-item">
                        <div class="">
                            <label for="district-select">Quận/Huyện<span style="color:red">*</span></label>
                        </div>
                        <select required name="districts" id="district-select" onfocus='this.size=5;' onblur='this.size=1;'
                            onchange='this.size=1; this.blur();'>
                            <option class="text-center" value="">--Chọn Quận/Huyện--</option>
                        </select>
                        <div class="text-center text-danger content__note" id="note2">
                            Vui lòng chọn Quận/Huyện
                        </div>
                    </div>
                    <div class="address-item">
                        <div class="">
                            <label for="ward-select">Phường/Xã<span style="color:red">*</span></label>
                        </div>
                        <select required name="wards" id="ward-select" onfocus='this.size=5;' onblur='this.size=1;'
                            onchange='this.size=1; this.blur();'>
                            <option class="text-center" value="">--Chọn Phường/Xã--</option>
                        </select>
                        <div class="text-center text-danger content__note" id="note3">
                            Vui lòng chọn Phường/Xã
                        </div>
                    </div>
                </div>
            
                <div class="mt-4">
                    <label class="d-block mb-2" for="detailed-address">Địa chỉ cụ thể<span
                            style="color:red">*</span></label>
                    <input type="text" id="detailed-address" name="detailed_address" placeholder="Nhập số nhà, tên đường"
                        value="{{house.DiaChiCuThe}}" required>
                    <div class="text-center text-danger content__note" id="detailed-address-note">
                        Vui lòng nhập địa chỉ cụ thể
                    </div>
                </div>
                <div class="mt-4 pb-2">
                    <h6>THÔNG TIN NHÀ TRỌ</h6>
                </div>
                <div>
                    <label class="d-block mb-2" for="title">Tiêu đề<span style="color:red">*</span></label>
                    <input type="text" id="title" name="title" placeholder="Nhập tiêu đề tin đăng nhà trọ"
                        value="{{house.Ten}}" required>
                    <div class="text-center text-danger content__note" id="title-note">
                        Vui lòng nhập tiêu đề cho bài viết
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <div class="mt-4 content__type address-item">
                        <div class="">
                            <label for="type-select">Loại trọ<span style="color:red">*</span></label>
                        </div>
                        <select required name="type_house" id="type-select" onfocus='this.size=5;' onblur='this.size=1;'
                            onchange='this.size=1; this.blur();'>
                            <option class="text-center" value="">--Chọn loại trọ--</option>
                            <option value="Homestay">Homestay</option>
                            <option value="Nhà nguyên căn">Nhà nguyên căn</option>
                            <option value="Căn hộ">Căn hộ</option>
                            <option value="Kí túc xá">Kí túc xá</option>
                            <option value="Phòng trọ">Phòng trọ</option>
                        </select>
                        <div class="text-center text-danger content__note" id="note7">
                            Vui lòng chọn Loại trọ
                        </div>
                    </div>
                    <div class="mt-4 content__people address-item">
                        <div class="">
                            <label for="status-select">Trạng thái phòng<span style="color:red">*</span></label>
                        </div>
                        <select required name="status" id="status-select" onfocus='this.size=3;' onblur='this.size=1;'
                            onchange='this.size=1; this.blur();'>
                            <option class="text-center" value="">--Chọn trạng thái phòng--</option>
                            <option value="Còn phòng">Còn phòng</option>
                            <option value="Hết phòng">Hết phòng</option>
                        </select>
                        <div class="text-center text-danger content__note" id="note6">
                            Vui lòng chọn Trạng thái phòng
                        </div>
                    </div>
                    <div class="mt-4 address-item" id="item-hidden">
                        <div class="">
                            <label>Trạng thái phòng<span style="color:red">*</span></label>
                        </div>
                
                    </div>
                </div>
                <div class="mt-4 pb-2">
                    <label class="d-block mb-2" for="description">Nội dung mô tả<span style="color:red">*</span></label>
                    <textarea id="description" name="description" rows="6">{{house.Ten}}</textarea>
                    <div class="text-center text-danger content__note" id="description-note">
                        Vui lòng nhập mô tả nhà cho thuê
                    </div>
                </div>
                <div class="content__utility">
                    <div class="mt-4">
                        <div class="mb-2 ">
                            <label for="utility-select">Tiện ích (Ít nhất 1 tiện ích)<span
                                    style="color:red">*</span></label>
                        </div>
                        <select required name="utilities" id="utility-select" placeholder="Bấm vào để chọn tiện ích"
                            multiple>
                        </select>
                    </div>

                </div>
                <div class="d-flex justify-content-between">
                    <div class="mt-4 content__area">
                        <label class="d-block mb-2" for="area">Diện tích (m2)<span style="color:red">*</span></label>
                        <input type="number" id="area" name="area" placeholder="Nhập diện tích trọ"
                            value="{{house.DienTich}}" required>
                        <div class="text-center text-danger content__note" id="area-note">
                            Vui lòng nhập diện tích
                        </div>
                    </div>
                    <div class="mt-4 content__people">
                        <label class="d-block mb-2" for="num_people">Số người<span style="color:red">*</span></label>
                        <input type="number" min="1" id="num_people" name="num_people" placeholder="Số người ở"
                            value="{{house.SoNguoi}}" required>
                        <div class="text-center text-danger content__note" id="note5">
                            Vui lòng chọn nhập số người ở
                        </div>
                    </div>
                    <div class="mt-4 address-item" id="item-hidden">
                        <div class="">
                            <label>Trạng thái phòng<span style="color:red">*</span></label>
                        </div>
                    
                    </div>
                </div>

                <div class="d-flex justify-content-between content__prices">
                    <div class="mt-4">
                        <label class="d-block mb-2" for="price">Giá cho thuê (VNĐ)<span style="color:red">*</span></label>
                        <input type="number" id="price" name="price" placeholder="Nhập giá nhà trọ" value="{{house.Gia}}"
                            required>
                        <div class="text-center text-danger content__note" id="price-note">
                            Vui lòng nhập giá cho thuê
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="d-block mb-2" for="water">Tiền nước (VNĐ/m3)<span style="color:red">*</span></label>
                        <input type="number" id="water" name="water" placeholder="Nhập tiền nước"
                            value="{{house.TienNuoc}}">
                        <div class="text-center text-danger content__note" id="note8">
                            Vui lòng nhập tiền nước
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="d-block mb-2" for="electricity">Tiền điện (VNĐ/kWh)<span style="color:red">*</span></label>
                        <input type="number" id="electricity" name="electricity" placeholder="Nhập tiền điện"
                            value="{{house.TienDien}}">
                        <div class="text-center text-danger content__note" id="note9">
                            Vui lòng nhập tiền điện
                        </div>
                    </div>
                </div>
                <div class="mt-4 pb-2">
                    <h6>HÌNH ẢNH/VIDEO<span style="color:red">*</span></h6>
                </div>
                <div class="content__files d-flex flex-wrap" id="drop_zone" ondrop="dropHandler(event);"
                    ondragover="dragOverHandler(event);">
                    {{#ifOr videos photos}}
                    {{else}}
                    <div>Kéo thả ảnh/video vào đây</div>
                    {{/ifOr}}

                </div>
                <div class="content__btn-add-file text-center">
                    <input type="file" id="house-file" name="upload-house-file" hidden multiple>
                    <div class="mt-3 d-flex justify-content-center align-items-center">
                        <label for="house-file">Upload Ảnh/Video</label>
                        <i class="fas fa-upload mx-2"></i>
                    </div>
                </div>
                <div class="btn-submit mt-4">
                    <input id="js-btn-submit" type="submit" value="XÁC NHẬN">
                </div>

            </form>
        </div>
    </div>

</div>