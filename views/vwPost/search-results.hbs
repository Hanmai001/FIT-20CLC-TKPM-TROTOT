{{#section "css"}}
<link rel="stylesheet" href="../../public/assets/css/home-page.css" />
<link rel="stylesheet" href="../../public/assets/css/fill_search.css" />
<link rel="stylesheet" href="../../public/assets/css/landlord/header_landlord.css" />
<link rel="stylesheet" href="../../public/assets/css/list.css" />
{{/section}}
{{#section "js"}}
<script src="../../public/assets/js/header_landlors.js"></script>
{{!-- paging --}}
<script>
    $("#filter-select").change(function () {
        let selectedVal = $("#filter-select option:selected").val();
        if (selectedVal != "") {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('filter', selectedVal);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        }
    })
    var Pagination = {

        code: '',

        // --------------------
        // Utility
        // --------------------

        // converting initialize data
        Extend: function (data) {
            data = data || {};
            Pagination.size = data.size || 1;
            Pagination.page = data.page || 1;
            Pagination.step = data.step || 3;
        },

        // add pages by number (from [s] to [f])
        Add: function (s, f) {
            for (var i = s; i < f; i++) {
                Pagination.code += '<a>' + i + '</a>';
            }
        },
        // add last page with separator
        Last: function () {
            Pagination.code += '<i>...</i><a>' + Pagination.size + '</a>';
        },

        // add first page with separator
        First: function () {
            Pagination.code += '<a>1</a><i>...</i>';
        },
        // --------------------
        // Handlers
        // --------------------

        // change page
        Click: function () {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', this.innerHTML);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
            //Pagination.page = +this.innerHTML;
            //Pagination.Start();
        },

        // previous page
        Prev: function () {
            Pagination.page--;
            if (Pagination.page < 1) {
                Pagination.page = 1;
            }
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', Pagination.page);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        },

        // next page
        Next: function () {
            Pagination.page++;
            if (Pagination.page > Pagination.size) {
                Pagination.page = Pagination.size;
            }
            //Pagination.Start();
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', Pagination.page);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        },



        // --------------------
        // Script
        // --------------------

        // binding pages
        Bind: function () {
            var a = Pagination.e.getElementsByTagName('a');
            for (var i = 0; i < a.length; i++) {
                if (+a[i].innerHTML === Pagination.page) a[i].className = 'current';
                a[i].addEventListener('click', Pagination.Click, false);
            }
        },

        // write pagination
        Finish: function () {
            Pagination.e.innerHTML = Pagination.code;
            Pagination.code = '';
            Pagination.Bind();
        },

        // find pagination type
        Start: function () {
            if (Pagination.size < Pagination.step * 2 + 6) {
                Pagination.Add(1, Pagination.size + 1);
            }
            else if (Pagination.page < Pagination.step * 2 + 1) {
                Pagination.Add(1, Pagination.step * 2 + 4);
                Pagination.Last();
            }
            else if (Pagination.page > Pagination.size - Pagination.step * 2) {
                Pagination.First();
                Pagination.Add(Pagination.size - Pagination.step * 2 - 2, Pagination.size + 1);
            }
            else {
                Pagination.First();
                Pagination.Add(Pagination.page - Pagination.step, Pagination.page + Pagination.step + 1);
                Pagination.Last();
            }
            Pagination.Finish();
        },



        // --------------------
        // Initialization
        // --------------------

        // binding buttons
        Buttons: function (e) {
            var nav = e.getElementsByTagName('a');
            nav[0].addEventListener('click', Pagination.Prev, false); //nếu bấm vào nút prev thì xử lý event
            nav[1].addEventListener('click', Pagination.Next, false); //nếu bấm vào nút prev thì xử lý event
        },

        // create skeleton
        Create: function (e) {

            var html = [
                '<a>&#9668;</a>', // previous button
                '<span></span>',  // pagination container
                '<a>&#9658;</a>'  // next button
            ];
            e.innerHTML = html.join(''); //thêm html vào element e
            Pagination.e = e.getElementsByTagName('span')[0]; //Lấy a đtien
            Pagination.Buttons(e);
        },

        // init
        Init: function (e, data) {
            Pagination.Extend(data);
            Pagination.Create(e);
            Pagination.Start();
        }
    };
    /* * * * * * * * * * * * * * * * *
    * Initialization
    * * * * * * * * * * * * * * * * */
    var init = function () {
        const pageSize = '{{pages}}';
        const pageCurr = '{{page}}';
        Pagination.Init(document.getElementById('pagination'), {
            size: parseInt(pageSize), // pages size
            page: parseInt(pageCurr),  // selected page
            step: 3   // pages before and after current
        });
    };
    document.addEventListener('DOMContentLoaded', init, false);
</script>
{{!-- script css --}}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var h3Elements = document.querySelectorAll(".truncate");
        h3Elements.forEach(function (element) {
            var text = element.textContent;
            var truncatedText = text.length > 30 ? text.substring(0, 30) + "..." : text;
            element.textContent = truncatedText;
        });
    });
</script>
<script>
    const filterForm = document.querySelector('.filter-container');
    filterForm.addEventListener('submit', (event) => {
        event.preventDefault(); // Ngăn chặn gửi form mặc định

        const searchParams = new URLSearchParams(window.location.search); // Lấy thông tin tham số tìm kiếm từ URL hiện tại
        const formParams = new FormData(filterForm); // Lấy thông tin từ form

        for (const [key, value] of formParams.entries()) {
            searchParams.set(key, value); // Cập nhật hoặc thêm tham số tìm kiếm từ form vào URL
        }

        const searchURL = `http://localhost:3000/post/search-results?${searchParams.toString()}`;
        window.location.href = searchURL; // Chuyển hướng đến URL mới đã cập nhật
    });
</script>
<script>
    $("#sort-select").change(function () {
        let selectedVal = $("#sort-select option:selected").val();
        if (selectedVal != "") {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('sort', selectedVal);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        }
    })
</script>z
{{/section}}
{{#if user}}
{{#ifEqualString user.LoaiNguoiDung "Người chủ trọ"}}
{{>header_landlord}}
{{else ifEqualString user.LoaiNguoiDung "Người thuê trọ"}}
{{>header_tenant}}
{{else ifEqualString user.LoaiNguoiDung "Admin"}}
{{>header_admin}}
{{else}}
{{>header_default}}
{{/ifEqualString}}
{{else}}
{{>header_default}}
{{/if}}
{{!-- fillter bar --}}
{{>search_bar}}
<div class="content">
    <div class="" style="background-color:white; padding:20px; box-shadow:4px 2px 10px rgba(0, 0, 0, 0.2);">
        <h1 style="font-size:xx-large">Kết Quả Tìm Kiếm</h1>
        <hr>
        <div class="list-rooms">
            {{#if results.length}}
            {{#each results}}
            <a href="/post/details/{{this.TinID}}" class="room" style="color:black; text-decoration:none">
                <img src="{{this.ChiTietHinhAnh}}" alt="" style="display:block; margin: -1px;">
                <h3 class="truncate">{{this.Ten}}</h3>
                <div>
                    <img src="../../public/assets/pictures/home.png" alt=""
                        style="width:13px; height:13px; margin-top:6.5px">
                    <p class="inline">Loại trọ: {{this.LoaiTro}}</p>
                </div>
                <div>
                    <img src="../../public/assets/pictures/area-graph.png" alt=""
                        style="width:13px; height:13px; margin-top:6.5px">
                    <p class="inline">Diện tích: {{this.DienTich}}m2</p>
                </div>
                <div>
                    <img src="../../public/assets/pictures/best-price.png" alt=""
                        style="width:13px; height:13px; margin-top:6.5px">
                    <p class="inline" style=" color:blue">{{this.Gia}} VNĐ</p>
                </div>
                <div>
                    <img src="../../public/assets/pictures/calendar.png" alt=""
                        style="width:13px; height:13px; margin-top:6.5px">
                    <p class="inline" style="color:rgb(139, 139, 139)">{{formatDate this.NgayDang}}</p>
                </div>
                <div>
                    <img src="../../public/assets/pictures/location.png" alt=""
                        style="width:13px; height:13px; margin-top:6.5px">
                    <p class="inline truncate">{{this.DiaChi}}</p>
                </div>
            </a>
            {{/each}}
            {{else}}
            <p>Không có kết quả tìm kiếm.</p>
            {{/if}}
        </div>
    </div>
    <div class="d-flex justify-content-center my-4 container-pagination">
        <div id="pagination"></div>
    </div>
</div>