{{#section "css"}}
<link rel="stylesheet" href="../../public/assets/css/landlord/manage-review.css" />
<link rel="stylesheet" href="../../public/assets/css/landlord/header_landlord.css" />
<link rel="stylesheet" href="../../public/assets/css/landlord/sidebar_landlord.css" />
{{/section}}
{{#section "js"}}
<script src="../../public/assets/js/header_landlors.js"></script>
<script>
    var Pagination = {

        code: '',

        // --------------------
        // Utility
        // --------------------

        // converting initialize data
        Extend: function (data) {
            data = data || {};
            Pagination.size = data.size || 1;
            Pagination.page = data.page || 1;
            Pagination.step = data.step || 3;
        },

        // add pages by number (from [s] to [f])
        Add: function (s, f) {
            for (var i = s; i < f; i++) {
                Pagination.code += '<a>' + i + '</a>';
            }
        },
        // add last page with separator
        Last: function () {
            Pagination.code += '<i>...</i><a>' + Pagination.size + '</a>';
        },

        // add first page with separator
        First: function () {
            Pagination.code += '<a>1</a><i>...</i>';
        },
        // --------------------
        // Handlers
        // --------------------

        // change page
        Click: function () {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', this.innerHTML);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
            //Pagination.page = +this.innerHTML;
            //Pagination.Start();
        },

        // previous page
        Prev: function () {
            Pagination.page--;
            if (Pagination.page < 1) {
                Pagination.page = 1;
            }
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', Pagination.page);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        },

        // next page
        Next: function () {
            Pagination.page++;
            if (Pagination.page > Pagination.size) {
                Pagination.page = Pagination.size;
            }
            //Pagination.Start();
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', Pagination.page);
            const updatedUrl = currentUrl.toString();
            window.location.href = updatedUrl;
        },



        // --------------------
        // Script
        // --------------------

        // binding pages
        Bind: function () {
            var a = Pagination.e.getElementsByTagName('a');
            for (var i = 0; i < a.length; i++) {
                if (+a[i].innerHTML === Pagination.page) a[i].className = 'current';
                a[i].addEventListener('click', Pagination.Click, false);
            }
        },

        // write pagination
        Finish: function () {
            Pagination.e.innerHTML = Pagination.code;
            Pagination.code = '';
            Pagination.Bind();
        },

        // find pagination type
        Start: function () {
            if (Pagination.size < Pagination.step * 2 + 6) {
                Pagination.Add(1, Pagination.size + 1);
            }
            else if (Pagination.page < Pagination.step * 2 + 1) {
                Pagination.Add(1, Pagination.step * 2 + 4);
                Pagination.Last();
            }
            else if (Pagination.page > Pagination.size - Pagination.step * 2) {
                Pagination.First();
                Pagination.Add(Pagination.size - Pagination.step * 2 - 2, Pagination.size + 1);
            }
            else {
                Pagination.First();
                Pagination.Add(Pagination.page - Pagination.step, Pagination.page + Pagination.step + 1);
                Pagination.Last();
            }
            Pagination.Finish();
        },



        // --------------------
        // Initialization
        // --------------------

        // binding buttons
        Buttons: function (e) {
            var nav = e.getElementsByTagName('a');
            nav[0].addEventListener('click', Pagination.Prev, false); //nếu bấm vào nút prev thì xử lý event
            nav[1].addEventListener('click', Pagination.Next, false); //nếu bấm vào nút prev thì xử lý event
        },

        // create skeleton
        Create: function (e) {

            var html = [
                '<a>&#9668;</a>', // previous button
                '<span></span>',  // pagination container
                '<a>&#9658;</a>'  // next button
            ];
            e.innerHTML = html.join(''); //thêm html vào element e
            Pagination.e = e.getElementsByTagName('span')[0]; //Lấy a đtien
            Pagination.Buttons(e);
        },

        // init
        Init: function (e, data) {
            Pagination.Extend(data);
            Pagination.Create(e);
            Pagination.Start();
        }
    };
    /* * * * * * * * * * * * * * * * *
    * Initialization
    * * * * * * * * * * * * * * * * */
    var init = function () {
        const pageSize = '{{pages}}';
        const pageCurr = '{{page}}';
        console.log(pageCurr, pageSize)
        Pagination.Init(document.getElementById('pagination'), {
            size: parseInt(pageSize), // pages size
            page: parseInt(pageCurr),  // selected page
            step: 3   // pages before and after current
        });
    };
    document.addEventListener('DOMContentLoaded', init, false);
</script>
{{/section}}
<div class="container-fluid landlord-profile">
    {{> header_landlord}}
    {{> sidebar_landlord}}

    <div class="content">
        <div class="content__header mt-4 pb-3 border-bottom">
            <h5>QUẢN LÝ ĐÁNH GIÁ</h5>
            <div>Xem tất cả các đánh giá của mọi người đối với tin đăng của bạn</div>

        </div>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th class="table-col1">Tên trọ</th>
                    <th class="table-col2">Người đánh giá</th>
                    <th class="table-col3">Nội dung</th>
                    <th class="table-col4">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                {{#if reviews}}
                {{#each reviews}}
                <tr>
                    <td>
                        {{this.Ten}}
                    </td>
                    <td>
                        {{this.TaiKhoan}}
                    </td>
                    <td>
                        {{this.ChiTietDanhGia}}
                    </td>
                    <td><a class="py-3" href="/post/details/{{this.TinID}}"
                            style="opacity: 1; background-color: transparent;">
                            Xem chi tiết</a></td>
                </tr>
                {{/each}}
                {{else}}
                <div class="content__message">Bạn chưa có đánh giá nào từ người dùng:(</div>
                {{/if}}
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-center my-4 container-pagination">
        <div id="pagination"></div>
    </div>
</div>