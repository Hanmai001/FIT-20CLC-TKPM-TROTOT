{{#section "css"}}
<link rel="stylesheet" type="text/css" href="../public/assets/css/landlord/header_landlord.css" />
<link rel="stylesheet" type="text/css" href="../public/assets/css/fill_search.css">
<link rel="stylesheet" type="text/css" href="../public/assets/css/home-page.css" />
{{/section}}

{{#section "js"}}
<script src="../public/assets/js/header_landlors.js"></script>
<script>
    var Pagination = {

        code: '',

        // --------------------
        // Utility
        // --------------------

        // converting initialize data
        Extend: function (data) {
            data = data || {};
            Pagination.size = data.size || 300;
            Pagination.page = data.page || 1;
            Pagination.step = data.step || 3;
        },

        // add pages by number (from [s] to [f])
        Add: function (s, f) {
            for (var i = s; i < f; i++) {
                Pagination.code += '<a>' + i + '</a>';
            }
        },
        // add last page with separator
        Last: function () {
            Pagination.code += '<i>...</i><a>' + Pagination.size + '</a>';
        },

        // add first page with separator
        First: function () {
            Pagination.code += '<a>1</a><i>...</i>';
        },
        // --------------------
        // Handlers
        // --------------------

        // change page
        Click: function () {
            // window.location.href = "http://localhost:3000/tenant/profile"
            Pagination.page = +this.innerHTML;
            Pagination.Start();
        },

        // previous page
        Prev: function () {
            Pagination.page--;
            if (Pagination.page < 1) {
                Pagination.page = 1;
            }
            Pagination.Start();
        },

        // next page
        Next: function () {
            Pagination.page++;
            if (Pagination.page > Pagination.size) {
                Pagination.page = Pagination.size;
            }
            Pagination.Start();
        },



        // --------------------
        // Script
        // --------------------

        // binding pages
        Bind: function () {
            var a = Pagination.e.getElementsByTagName('a');
            for (var i = 0; i < a.length; i++) {
                if (+a[i].innerHTML === Pagination.page) a[i].className = 'current';
                a[i].addEventListener('click', Pagination.Click, false);
            }
        },

        // write pagination
        Finish: function () {
            Pagination.e.innerHTML = Pagination.code;
            Pagination.code = '';
            Pagination.Bind();
        },

        // find pagination type
        Start: function () {
            if (Pagination.size < Pagination.step * 2 + 6) {
                Pagination.Add(1, Pagination.size + 1);
            }
            else if (Pagination.page < Pagination.step * 2 + 1) {
                Pagination.Add(1, Pagination.step * 2 + 4);
                Pagination.Last();
            }
            else if (Pagination.page > Pagination.size - Pagination.step * 2) {
                Pagination.First();
                Pagination.Add(Pagination.size - Pagination.step * 2 - 2, Pagination.size + 1);
            }
            else {
                Pagination.First();
                Pagination.Add(Pagination.page - Pagination.step, Pagination.page + Pagination.step + 1);
                Pagination.Last();
            }
            Pagination.Finish();
        },



        // --------------------
        // Initialization
        // --------------------

        // binding buttons
        Buttons: function (e) {
            var nav = e.getElementsByTagName('a');
            nav[0].addEventListener('click', Pagination.Prev, false); //nếu bấm vào nút prev thì xử lý event
            nav[1].addEventListener('click', Pagination.Next, false); //nếu bấm vào nút prev thì xử lý event
        },

        // create skeleton
        Create: function (e) {

            var html = [
                '<a>&#9668;</a>', // previous button
                '<span></span>',  // pagination container
                '<a>&#9658;</a>'  // next button
            ];

            e.innerHTML = html.join(''); //thêm html vào element e
            Pagination.e = e.getElementsByTagName('span')[0]; //Lấy a đtien
            Pagination.Buttons(e);
        },

        // init
        Init: function (e, data) {
            Pagination.Extend(data);
            Pagination.Create(e);
            Pagination.Start();
        }
    };



    /* * * * * * * * * * * * * * * * *
    * Initialization
    * * * * * * * * * * * * * * * * */

    var init = function () {
        Pagination.Init(document.getElementById('pagination'), {
            size: 30, // pages size
            page: 1,  // selected page
            step: 3   // pages before and after current
        });
    };
    document.addEventListener('DOMContentLoaded', init, false);
    // Lấy đối tượng các menu select và các giá trị mặc định
    var citySelect = document.getElementById("city-select");
    var districtSelect = document.getElementById("district-select");
    var wardSelect = document.getElementById("ward-select");
    var defaultCityOption = citySelect.querySelector("option[value='']");
    var defaultDistrictOption = districtSelect.querySelector("option[value='']");
    var defaultWardOption = wardSelect.querySelector("option[value='']");

    // Lấy dữ liệu các tỉnh/thành phố, quận/huyện và phường/xã từ API
    fetch("https://provinces.open-api.vn/api/p/")
        .then(response => response.json())
        .then(data => {
            // Thêm các tỉnh/thành phố vào menu select
            data.forEach(city => {
                var option = document.createElement("option");
                option.text = city.name;
                option.value = city.code;
                citySelect.add(option);
            });
        });

    // Lấy danh sách các quận/huyện khi tỉnh/thành phố được chọn
    citySelect.addEventListener("change", function () {
        // Xóa các quận/huyện và phường/xã đã chọn trước đó
        districtSelect.innerHTML = "";
        wardSelect.innerHTML = "";
        districtSelect.add(defaultDistrictOption);
        wardSelect.add(defaultWardOption);

        // Lấy mã tỉnh/thành phố được chọn
        var cityCode = this.value;

        // Lấy dữ liệu các quận/huyện của tỉnh/thành phố được chọn từ API
        fetch(`https://provinces.open-api.vn/api/p/${cityCode}?depth=2`)
            .then(response => response.json())
            .then(data => {
                // Thêm các quận/huyện vào menu select
                data.districts.forEach(district => {
                    var option = document.createElement("option");
                    option.text = district.name;
                    option.value = district.code;
                    districtSelect.add(option);
                });
            });
    });

    // Lấy danh sách các phường/xã khi quận/huyện được chọn
    districtSelect.addEventListener("change", function () {
        // Xóa các phường/xã đã chọn trước đó
        wardSelect.innerHTML = "";
        wardSelect.add(defaultWardOption);

        // Lấy mã quận/huyện được chọn
        var districtCode = this.value;

        // Lấy dữ liệu các phường/xã của quận/huyện được chọn từ API
        fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
            .then(response => response.json())
            .then(data => {
                // Thêm các phường/xã vào menu select
                data.wards.forEach(ward => {
                    var option = document.createElement("option");
                    option.text = ward.name;
                    option.value = ward.code;
                    wardSelect.add(option);
                });
            });
    });


</script>
{{/section}}

{{#if user}}
{{#ifEqualString user.LoaiNguoiDung "Người chủ trọ"}}
{{>header_landlord}}
{{else ifEqualString user.LoaiNguoiDung "Người thuê trọ"}}
{{>header_tenant}}
{{else ifEqualString user.LoaiNguoiDung "Admin"}}
{{>header_admin}}
{{else}}
{{>header_default}}
{{/ifEqualString}}
{{else}}
{{>header_default}}
{{/if}}

{{!-- fillter bar --}}
{{>search_bar}}
{{!-- content --}}
<div class="content m-5" style="background-color:white; padding:20px;">
    {{!-- start of product --}}
    <div class="content">
        <div class="content__header mt-4 pb-3 border-bottom">
            <h5>PHÒNG TRỌ NỔI BẬT</h5>
    
        </div>
        {{#each post}}
        <div class="item js-item">
            
            <div class="row">
                <div class="col-4 py-4">
                    <img src="{{this.Hinhanh}}" alt="" width="100%" height="200px">
                </div>
                <div class="col-7 py-4">
                    <div class="item__name mb-2 fw-bold row">
                        <div class="col-6 item__name-name">
                            {{this.Ten}}
                        </div>
                        <div class="col-6 text-end text-danger item__name-last">
    
                        </div>
                    </div>
                    <div class="item__type mb-1 row">
                        <div class="col-6">
                            <img src="../../public/assets/pictures/home.png" alt="" width="16px" height="16px">
                            <span>Loại trọ: {{this.LoaiTro}}</span>
                        </div>
                        <div class="col-6 text-end">
                           
                        </div>
                    </div>
                    <div class="item__area mb-1">
                        <img src="../../public/assets/pictures/area-graph.png" alt="" width="16px" height="16px">
                        Diện tích: {{this.DienTich}}m2
                    </div>
                    <div class="item__price mb-1 fw-bolder">
                        <img src="../../public/assets/pictures/best-price.png" alt="" width="16px" height="16px">
                        {{this.Gia}} VNĐ
                    </div>
                    <div class="item__address mb-1">
                        <img src="../../public/assets/pictures/location.png" alt="" width="16px" height="16px">
                        Địa chỉ: {{this.DiaChi}}
                    </div>
                </div>
            </div>
    
        </div>
        {{/each}}
    
    
    </div>
</div>
</div>
<div class="d-flex justify-content-center my-4 container-pagination" style="margin-left: -100px;">
    <div id="pagination"></div>
</div>